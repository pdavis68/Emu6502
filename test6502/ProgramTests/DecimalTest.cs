using cpu6502;
using Xunit;

namespace test6502.ProgramTests
{
    public class DecimalTest : CPUTest
    {



        /// <summary>
        /// See 6502_decimal_test.a65 for source code
        /// </summary>
        [Fact]
        public void Decimal_Test()
        {

            CPU cpu = new CPU();
            cpu.RAM = GetCleanRam();
            byte[] program = {
                        0xA0, 0x01, 0x84, 0x0B, 0xA9, 0x00, 0x85, 0x00, 0x85, 0x01, 0xA5, 0x01,
                        0x29, 0x0F, 0x85, 0x0E, 0xA5, 0x01, 0x29, 0xF0, 0x85, 0x0F, 0x09, 0x0F,
                        0x85, 0x10, 0xA5, 0x00, 0x29, 0x0F, 0x85, 0x0C, 0xA5, 0x00, 0x29, 0xF0,
                        0x85, 0x0D, 0x20, 0x4D, 0x02, 0x20, 0xD4, 0x02, 0x20, 0xC7, 0x02, 0xD0,
                        0x1A, 0x20, 0x91, 0x02, 0x20, 0xDD, 0x02, 0x20, 0xC7, 0x02, 0xD0, 0x0F,
                        0xE6, 0x00, 0xD0, 0xDA, 0xE6, 0x01, 0xD0, 0xC6, 0x88, 0x10, 0xC3, 0xA9,
                        0x00, 0x85, 0x0B, 0x00, 0xDB, 0xF8, 0xC0, 0x01, 0xA5, 0x00, 0x65, 0x01,
                        0x85, 0x04, 0x08, 0x68, 0x85, 0x05, 0xD8, 0xC0, 0x01, 0xA5, 0x00, 0x65,
                        0x01, 0x85, 0x02, 0x08, 0x68, 0x85, 0x03, 0xC0, 0x01, 0xA5, 0x0C, 0x65,
                        0x0E, 0xC9, 0x0A, 0xA2, 0x00, 0x90, 0x06, 0xE8, 0x69, 0x05, 0x29, 0x0F,
                        0x38, 0x05, 0x0D, 0x75, 0x0F, 0x08, 0xB0, 0x04, 0xC9, 0xA0, 0x90, 0x03,
                        0x69, 0x5F, 0x38, 0x85, 0x06, 0x08, 0x68, 0x85, 0x0A, 0x68, 0x85, 0x08,
                        0x60, 0xF8, 0xC0, 0x01, 0xA5, 0x00, 0xE5, 0x01, 0x85, 0x04, 0x08, 0x68,
                        0x85, 0x05, 0xD8, 0xC0, 0x01, 0xA5, 0x00, 0xE5, 0x01, 0x85, 0x02, 0x08,
                        0x68, 0x85, 0x03, 0x60, 0xC0, 0x01, 0xA5, 0x0C, 0xE5, 0x0E, 0xA2, 0x00,
                        0xB0, 0x06, 0xE8, 0xE9, 0x05, 0x29, 0x0F, 0x18, 0x05, 0x0D, 0xF5, 0x0F,
                        0xB0, 0x02, 0xE9, 0x5F, 0x85, 0x06, 0x60, 0xA5, 0x04, 0xC5, 0x06, 0xD0,
                        0x06, 0xA5, 0x05, 0x45, 0x0A, 0x29, 0x01, 0x60, 0xA5, 0x08, 0x85, 0x07,
                        0xA5, 0x03, 0x85, 0x09, 0x60, 0x20, 0xAC, 0x02, 0xA5, 0x03, 0x85, 0x07,
                        0x85, 0x08, 0x85, 0x09, 0x85, 0x0A, 0x60
                };
            cpu.LoadProgram(0x200, program);
            cpu.InstructionPointer = 0x200;
            try
            {
                cpu.Run(6000);
            }
            catch (CPUBreakException)
            {
                Assert.Equal(0x01, cpu.RAM[11]);
                return;
            }
            Assert.True(false, "Didn't get CPUBreakException");
        }

    }
}
